plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//이메일 인증
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	//querydsl 추가
	implementation 'com.querydsl:querydsl-jpa'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'

	// 쿼리 파라미터 로그 (외부 라이브러리 // 운영 단계에서 제거 혹은 성능 테스트 필요)
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'

	// validation
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.5'

	// jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	// OPEN API 3
	implementation 'org.springdoc:springdoc-openapi-ui:1.5.12'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.5.12'

	// S3
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.6.RELEASE'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.webjars:webjars-locator-core'
	implementation 'org.webjars:sockjs-client:1.0.2'
	implementation 'org.webjars:stomp-websocket:2.3.3'
	implementation 'org.webjars:bootstrap:3.3.7'
	implementation 'org.webjars:jquery:3.1.1-1'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

}

test {
	useJUnitPlatform()
}

//querydsl 추가
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath}
//compileQuerydsl {
//	options.annotationProcessorPath = configurations.querydsl
//}
compileQuerydsl.doFirst {
	if ( file(querydslDir).exists() )
		delete(file(querydslDir))
	options.annotationProcessorPath = configurations.querydsl
}